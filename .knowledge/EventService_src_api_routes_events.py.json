{"is_source_file": true, "format": "Python", "description": "This file defines API routes for event management in a FastAPI application. It includes endpoints for creating, retrieving, updating, deleting, favoriting, unfavoriting, listing organizer-specific events, and fetching analytics summaries for events.", "external_files": ["src.domain.schemas", "src.security.deps", "src.services"], "external_methods": ["svc.create_event", "svc.get_event", "svc.list_events", "svc.update_event", "svc.delete_event", "svc.favorite_event", "svc.unfavorite_event", "svc.organizer_events", "svc.analytics_summary", "require_organizer", "get_current_user"], "published": ["router"], "classes": [], "methods": [{"name": "EventPublic create_event_endpoint(payload: EventCreate, user: CurrentUser = Depends(require_organizer))", "description": "Creates a new event; requires organizer role.", "scope": "", "scopeKind": ""}, {"name": "EventPublic get_event_endpoint(event_id: str, increment_view: bool = True)", "description": "Retrieves an event by ID; optionally increments view count.", "scope": "", "scopeKind": ""}, {"name": "EventList list_events_endpoint( q: Optional[str] = Query(None, description=\"Free text query on title/description\"), category: Optional[str] = Query(None, description=\"Category filter\"), location: Optional[str] = Query(None, description=\"Location filter\"), status_filter: Optional[str] = Query(None, description=\"Event status\"), start_from: Optional[datetime] = Query(None, description=\"Start time from (inclusive)\"), start_to: Optional[datetime] = Query(None, description=\"Start time to (inclusive)\"), tags: Optional[List[str]] = Query(None, description=\"Require all of these tags\"), page: int = Query(1, ge=1, description=\"Page number\"), page_size: int = Query(20, ge=1, le=100, description=\"Page size\"), sort_by: Optional[str] = Query(None, description=\"Sort by: start_time|created_at|views|favorites\"), sort_dir: str = Query(\"desc\", pattern=\"^(asc|desc)$\", description=\"Sort direction\"), )", "description": "Lists available events with filters and pagination.", "scope": "", "scopeKind": ""}, {"name": "EventPublic update_event_endpoint( event_id: str, payload: EventUpdate, user: CurrentUser = Depends(require_organizer), )", "description": "Updates an existing event; organizer or admin role required.", "scope": "", "scopeKind": ""}, {"name": "None delete_event_endpoint(event_id: str, user: CurrentUser = Depends(require_organizer))", "description": "Deletes an event; organizer or admin role required.", "scope": "", "scopeKind": ""}, {"name": "EventPublic favorite_event_endpoint(event_id: str, user: CurrentUser = Depends(get_current_user))", "description": "Favorites an event by the current user.", "scope": "", "scopeKind": ""}, {"name": "EventPublic unfavorite_event_endpoint(event_id: str, user: CurrentUser = Depends(get_current_user))", "description": "Removes a favorited event for the current user.", "scope": "", "scopeKind": ""}, {"name": "EventList organizer_events_endpoint( organizer_id: str, status_filter: Optional[str] = Query(None, description=\"Event status filter\"), page: int = Query(1, ge=1), page_size: int = Query(20, ge=1, le=100), user: CurrentUser = Depends(require_organizer), )", "description": "Lists events associated with a specific organizer.", "scope": "", "scopeKind": ""}, {"name": "AnalyticsSummary analytics_summary_endpoint( event_id: str, user: CurrentUser = Depends(require_organizer) )", "description": "Provides analytics summary for an event; organizer or admin.", "scope": "", "scopeKind": ""}], "calls": ["svc.create_event", "svc.get_event", "svc.list_events", "svc.update_event", "svc.delete_event", "svc.favorite_event", "svc.unfavorite_event", "svc.organizer_events", "svc.analytics_summary", "require_organizer", "get_current_user"], "search-terms": ["FastAPI event routes", "Event CRUD endpoints", "Event listing filters", "Event analytics", "Organizer event management", "Favorites endpoints"], "state": 2, "file_id": 10, "knowledge_revision": 36, "git_revision": "", "revision_history": [{"21": ""}, {"36": ""}], "ctags": [{"_type": "tag", "name": "analytics_summary_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def analytics_summary_endpoint($/", "language": "Python", "typeref": "typename:AnalyticsSummary", "kind": "function", "signature": "( event_id: str, user: CurrentUser = Depends(require_organizer) )"}, {"_type": "tag", "name": "create_event_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def create_event_endpoint(payload: EventCreate, user: CurrentUser = Depends(require_organizer)) /", "language": "Python", "typeref": "typename:EventPublic", "kind": "function", "signature": "(payload: EventCreate, user: CurrentUser = Depends(require_organizer))"}, {"_type": "tag", "name": "delete_event_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def delete_event_endpoint(event_id: str, user: CurrentUser = Depends(require_organizer)) -> None/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(event_id: str, user: CurrentUser = Depends(require_organizer))"}, {"_type": "tag", "name": "favorite_event_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def favorite_event_endpoint(event_id: str, user: CurrentUser = Depends(get_current_user)) -> Eve/", "language": "Python", "typeref": "typename:EventPublic", "kind": "function", "signature": "(event_id: str, user: CurrentUser = Depends(get_current_user))"}, {"_type": "tag", "name": "get_event_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def get_event_endpoint(event_id: str, increment_view: bool = True) -> EventPublic:$/", "language": "Python", "typeref": "typename:EventPublic", "kind": "function", "signature": "(event_id: str, increment_view: bool = True)"}, {"_type": "tag", "name": "list_events_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def list_events_endpoint($/", "language": "Python", "typeref": "typename:EventList", "kind": "function", "signature": "( q: Optional[str] = Query(None, description=\"Free text query on title/description\"), category: Optional[str] = Query(None, description=\"Category filter\"), location: Optional[str] = Query(None, description=\"Location filter\"), status_filter: Optional[str] = Query(None, description=\"Event status\"), start_from: Optional[datetime] = Query(None, description=\"Start time from (inclusive)\"), start_to: Optional[datetime] = Query(None, description=\"Start time to (inclusive)\"), tags: Optional[List[str]] = Query(None, description=\"Require all of these tags\"), page: int = Query(1, ge=1, description=\"Page number\"), page_size: int = Query(20, ge=1, le=100, description=\"Page size\"), sort_by: Optional[str] = Query(None, description=\"Sort by: start_time|created_at|views|favorites\"), sort_dir: str = Query(\"desc\", pattern=\"^(asc|desc)$\", description=\"Sort direction\"), )"}, {"_type": "tag", "name": "organizer_events_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def organizer_events_endpoint($/", "language": "Python", "typeref": "typename:EventList", "kind": "function", "signature": "( organizer_id: str, status_filter: Optional[str] = Query(None, description=\"Event status filter\"), page: int = Query(1, ge=1), page_size: int = Query(20, ge=1, le=100), user: CurrentUser = Depends(require_organizer), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^router = APIRouter(prefix=\"\\/events\", tags=[\"events\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "svc", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^from src.services import events as svc$/", "language": "Python", "kind": "unknown", "nameref": "unknown:events"}, {"_type": "tag", "name": "unfavorite_event_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def unfavorite_event_endpoint(event_id: str, user: CurrentUser = Depends(get_current_user)) -> E/", "language": "Python", "typeref": "typename:EventPublic", "kind": "function", "signature": "(event_id: str, user: CurrentUser = Depends(get_current_user))"}, {"_type": "tag", "name": "update_event_endpoint", "path": "/home/kavia/workspace/code-generation/event-booking-and-management-app-13870-14378/EventService/src/api/routes/events.py", "pattern": "/^def update_event_endpoint($/", "language": "Python", "typeref": "typename:EventPublic", "kind": "function", "signature": "( event_id: str, payload: EventUpdate, user: CurrentUser = Depends(require_organizer), )"}], "hash": "cdfbbc9472b1bfcb9b8724247228cb42", "format-version": 4, "code-base-name": "EventService", "filename": "EventService/src/api/routes/events.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/events\", tags=[\"events\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}